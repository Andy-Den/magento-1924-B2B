/**
* MIXINS
*/

.animateTransition(@property:all, @delay:1s, @timing:ease)
{
  -webkit-transition: @property @delay @timing;
  -moz-transition: @property @delay @timing;
  -o-transition: @property @delay @timing;
  -ms-transition: @property @delay @timing;
  transition: @property @delay @timing;
}

.link()
{
  color:@defaultLinkColor;
  font-size: @defaultLinkSize;
  text-decoration: @defaultLinkDecoration;

  &:hover
  {
    color: @defaultLinkHoverColor;
    font-size: @defaultLinkHoverSize;
    text-decoration: @defaultLinkHoverDecoration;
  }
}

.featuredLink()
{
  color:@defaultFeaturedLinkColor;
  font-size: @defaultFeaturedLinkSize;
  text-decoration: @defaultFeaturedLinkDecoration;
  font-weight: @defaultFeaturedLinkWeight;

  &:hover
  {
    color: @defaultFeaturedLinkHoverColor;
    font-size: @defaultFeaturedLinkHoverSize;
    text-decoration: @defaultFeaturedLinkHoverDecoration;
    font-weight: @defaultFeaturedLinkHoverWeight;
  }
}

.rounded(@radius:@defaultBorderRadius){
  -webkit-border-radius:@radius;
  -moz-border-radius:@radius;
  border-radius:@radius;
}

.clearLine()
{
  clear: both;
}

.flipX(@value:-1)
{
  -moz-transform: scaleX(@value);
  -o-transform: scaleX(@value);
  -webkit-transform: scaleX(@value);
  transform: scaleX(@value);
  filter: FlipH;
  -ms-filter: "FlipH";
}

.flipY(@value:-1)
{
  -moz-transform: scaleY(@value);
  -o-transform: scaleY(@value);
  -webkit-transform: scaleY(@value);
  transform: scaleY(@value);
  filter: FlipV;
  -ms-filter: "FlipV";
}

.opacity(@value:50)
{
  /* Theoretically for IE 8 & 9 (more valid) */
  /* ...but not required as filter works too */
  /* should come BEFORE filter */
  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{value})"; // IE8

  /* This works in IE 8 & 9 too */
  /* ... but also 5, 6, 7 */
  filter: alpha(opacity=@value); // IE 5-7

  /* Modern Browsers */
  opacity: @value/100;
}

.boxSizing(@value:border-box)
{
  box-sizing: @value;
  -moz-box-sizing: @value;
  -webkit-box-sizing: @value;
}

.boxShadow(@position:3px 3px 5px 0px, @color:rgba(0,0,0,0.5))
{
  -webkit-box-shadow: @position @color;
  -moz-box-shadow: @position @color;
  box-shadow: @position @color;
}

.backgroundGradient(@gradientStart, @gradientEnd:darken(@gradientStart, 10%))
{
  background: average(@gradientStart,@gradientEnd);
  background: -moz-linear-gradient(top, @gradientStart 0%, @gradientEnd 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@gradientStart), color-stop(100%,@gradientEnd));
  background: -webkit-linear-gradient(top, @gradientStart 0%,@gradientEnd 100%);
  background: -o-linear-gradient(top, @gradientStart 0%,@gradientEnd 100%);
  background: -ms-linear-gradient(top, @gradientStart 0%,@gradientEnd 100%);
  background: linear-gradient(to bottom, @gradientStart 0%,@gradientEnd 100%);
}

.verticalAlign(@position:relative)
{
  position: @position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.grayScale(@value:100%)
{
  -webkit-filter: grayscale(@value);
  filter: grayscale(@value);
}

.cover(@background)
{
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='.@{background}', sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='@{background}', sizingMethod='scale')";
}

.textShadow(@color: rgba(150, 150, 150, 1))
{
  text-shadow: 1px 1px 1px @color;
}